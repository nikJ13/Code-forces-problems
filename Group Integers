*********QUESTION*****************
Given a list of integers nums, return whether you can split the list into 1 or more groups where:

The size of each group is larger than or equal to 2.
The sizes of all groups are equal.
All the integers in each group are the same.
Constraints

n â‰¤ 100,000 where n is the length of nums
Example 1
Input
nums = [2, 3, 5, 8, 3, 2, 5, 8]
Output
True
Explanation
We can group the numbers like so:

[2, 2]
[3, 3]
[5, 5]
[8, 8]
Example 2
Input
nums = [3, 0, 0, 3, 3, 3]
Output
True
Explanation
We can group the numbers like so:

[0, 0]
[3, 3]
[3, 3]
***************************
class Solution:
    def solve(self, nums):
        n = len(nums)
        if n==1:
            return False
        dict1 = defaultdict(int)
        for i in range(n):
            dict1[nums[i]]+=1
        m = 10000
        for j in dict1:
            m = min(m,dict1[j])
        if m==1:
            return False
        if m%2==0:
            m = 2
        for i in dict1:
            if dict1[i]%m!=0:
                return False
        return True
