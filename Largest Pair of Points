# QUESTION

You are given a strictly increasing list of integers nums and a list of integers values, both of the same length. Find a pair i ≤ j that maximizes values[i] + values[j] + nums[j] - nums[i] and return the value.

Constraints

2 ≤ n ≤ 100,000 where n is the length of nums and values
Example 1
Input
nums = [0, 1, 6]
values = [-5, 5, 4]
Output
14
Explanation
Here we can pick i = 1 and j = 2 to get 5 + 4 + 6 - 1

Example 2
Input
nums = [0, 3, 6]
values = [-5, 4, 8]
Output
16
Explanation
Here we can pick i = 2 and j = 2 to get 8 + 8 + 6 - 6

Company: GOOGLE
################################################################
class Solution:
    def solve(self, nums, values):
        max1 = -1
        index1 = 0
        max2 = -10000000000
        n = len(nums)
        for j in range(n):
            if values[j]+nums[j]>max1:
                max1 = values[j]+nums[j]
                index1 = j
        # print(max1)
        for i in range(index1+1):
            if values[i]-nums[i]>max2:
                max2 = values[i]-nums[i]
        # print(max)
        return max1+max2
