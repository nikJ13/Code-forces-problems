**************QUESTION*******************
Given a list of integers sorted in ascending order nums, square the elements and give the output in sorted order.

Constraints

n â‰¤ 100,000 where n is the length of nums
Example 1
Input
nums = [-9, -2, 0, 2, 3]
Output
[0, 4, 4, 9, 81]
Example 2
Input
nums = [1, 2, 3, 4, 5]
Output
[1, 4, 9, 16, 25]
********************************************
class Solution:
    def solve(self, nums):
        n = len(nums)
        for i in range(n):
            nums[i] = nums[i]**2
        return sorted(nums)

#### USING TWO POINTERS
class Solution:
    def solve(self, nums):
        n = len(nums)
        l = 0
        r = n - 1
        index = n - 1
        res = [0 for i in range(len(nums))]
        while index >= 0:
            if abs(nums[l]) > abs(nums[r]):
                res[index] = nums[l] * nums[l]
                l += 1
            else:
                res[index] = nums[r] * nums[r]
                r -= 1
            index -= 1

        return res
