************QUESTION********************
Given two lists of integers a and b sorted in ascending order, merge them into one large sorted list.

Constraints

0 ≤ n ≤ 200,000 where n is the length of a
0 ≤ m ≤ 200,000 where m is the length of b
Example 1
Input
a = [5, 10, 15]
b = [3, 8, 9]
Output
[3, 5, 8, 9, 10, 15]
*************************************

PYTHON CODE -
class Solution:
    def solve(self, a, b):
        n = len(a)
        m = len(b)
        i = 0
        j = 0
        l = []
        while i<n and j<m:
            if a[i]<b[j]:
                l.append(a[i])
                i += 1
            else:
                l.append(b[j])
                j += 1
        if i==n:
            for k in range(j,m):
                l.append(b[k])
        elif j==m:
            for k in range(i,n):
                l.append(a[k])
        return l


C++ CODE -
vector<int> solve(vector<int>& a, vector<int>& b) {
    int i=0,j=0,n = a.size(),m=b.size();
    vector<int> ans;
    while (i<n && j<m){
        if(a[i]<b[j]){
            ans.push_back(a[i]);
            i ++;
        }else{
            ans.push_back(b[j]);
            j++;
        }
    }
    if(i==n){
        for(int k=j;k<m;k++){
            ans.push_back(b[k]);
        }
    }else if(j==m){
        for(int k=i;k<n;k++){
            ans.push_back(a[k]);
        }
    }
    return ans;
}
